name: "SimpleConv"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    crop_size: 28
    mean_value: 33
  }
  data_param {
    source: "../../data/train.lmdb"
    batch_size: 32
    backend: LMDB
  }
}

layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param { shape: { dim: 1 dim: 1 dim: 28 dim: 28 } }
  include {
    phase: TEST
  }
}

# ---------------------------------

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 28
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv1/relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1/relu"
}

# ---------------------------------

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1/relu"
  top: "conv2"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 28
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv2/relu"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2/relu"
}

# ---------------------------------

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2/relu"
  top: "conv3"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 28
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv3/relu"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3/relu"
}

# ---------------------------------

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3/relu"
  top: "conv4"

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 28
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}

layer {
  name: "conv4/relu"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4/relu"
}

# ---------------------------------

# layer {
#   name: "conv4/pool"
#   type: "Pooling"
#   bottom: "conv4/relu"
#   top: "conv4/pool"
#   pooling_param {
#     pool: MAX
#     kernel_size: 2
#     stride: 2
#   }
# }

# ---------------------------------

layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "conv4/relu"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "fc8"
  type: "InnerProduct"
  #bottom: "conv2/relu"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#layer {
#  name: "accuracy"
#  type: "Accuracy"
#  bottom: "fc8"
#  bottom: "label"
#  top: "accuracy"
#  include {
#    phase: TEST
#  }
#}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
  include {
    phase: TRAIN
  }
}
